services:
  Order-Service:
    image: postgres
    container_name: "Order-Service"
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=postgres
    volumes:
      - order_service_data:/var/lib/postgresql/data
  Identity-Service:
    image: postgres
    container_name: "Identity-Service"
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=postgres
    volumes:
      - identity_service_data:/var/lib/postgresql/data
  Cart-Service:
    image: mongo
    container_name: "Cart-Service"
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongouser
      - MONGO_INITDB_ROOT_PASSWORD=mongopassword
      - POSTGRES_DB=mongodb
    volumes:
      - cart_service_data:/var/lib/data/db
  Product-Service:
    image: mongo
    container_name: "product-service"
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongouser
      - MONGO_INITDB_ROOT_PASSWORD=mongopassword
      - POSTGRES_DB=mongodb
    volumes:
      - product_service_data:/var/lib/data/db
  Customer-Service:
    image: mysql
    container_name: "customer-service"
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=mydatabase
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=mypassword
    volumes:
      - customer_service_data:/var/lib/mysql
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
  cart-service:
    image: cart-service
    container_name: cart_service-app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  customer-service:
    image: customer-service
    container_name: customer_service-app
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  discovery-server:
    image: discovery-server
    container_name: discovery-server-app
    ports:
      - "8088:8088"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  gateway-server:
    image: gateway-server
    container_name: gateway-server-app
    ports:
      - "8090:8090"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  identity-service:
    image: identity-service
    container_name: identity-service-app
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  notification-service:
    image: notification-service
    container_name: notification-service-app
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  order-service:
    image: order-service
    container_name: order-service-app
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
  product-service:
    image: product-service
    container_name: product-service-app
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
volumes:
  order_service_data:
  identity_service_data:
  cart_service_data:
  product_service_data:
  customer_service_data:


# MQ sistemleri hakkında ve kafka hakkında bir medium yazısı oluşturmak.

# Projedeki servicelerin bağımsız ER diagramlarını oluşturalım. (PAİR)